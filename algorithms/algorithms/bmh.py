'''
Алгоритм Байера-Мура-Хорспула поиска образа в строке
Основан  на таблице смещениц
O(N*M)-самый худший вариант, когда буквы строки и образа совпадают, кроме первой в образе
O(N/M)-самый лучший вариант, когда буквы в образе и строке разные
O(E)-среднее, где E - количество уникальных символов с троке и обра
'''

t = "данные"

# Формирование таблицы смещений

S = set() #уникалльные символы в образе
M = len(t) #число символов в образе
d = {} #словарь смещений

for i in range(M-2, -1, -1): #итерации с предпоследнего символа
    if t[i] not in S:        #если символ еще не добавлен в таблицу
        d[t[i]] = M-i-1
        S.add(t[i])

if t[M-1] not in S: #отдельно формируем последний символ
    d[t[M-1]] = M

d['*'] = M #смещения для прочих символов

print(d)

a = "большие данные"
N = len(a)

if N >= M:
    i = M-1

    while(i < N):
        k = 0
        for j in range(M-1, -1, -1):
            if a[i-k] != t[j]:
                if j == M-1: #если не совпал последний символ, то смещение по символу строки
                    off = d[a[i]] if d.get(a[i], False) else d['*'] # смещение, если не равен последний символ образа
                else: #если символ не последний, то смещение по символу образа
                    off = d[t[j]]

                i += off
                break

            k += 1

        if j == 0:
            print(f"Образ найден по индексу {i-k+1}")
            break
    else:
        print("Образ не найден")
else:
    print("Образ не найден")